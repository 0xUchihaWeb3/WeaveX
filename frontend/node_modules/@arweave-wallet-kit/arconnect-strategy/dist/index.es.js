var o = Object.defineProperty;
var w = (t, e, a) => e in t ? o(t, e, { enumerable: !0, configurable: !0, writable: !0, value: a }) : t[e] = a;
var n = (t, e, a) => (w(t, typeof e != "symbol" ? e + "" : e, a), a);
import i from "@arweave-wallet-kit/browser-wallet-strategy";
async function c(t, e = []) {
  return window != null && window.arweaveWallet ? await window.arweaveWallet[t](...e) : new Promise(
    (a, r) => window.addEventListener("arweaveWalletLoaded", async () => {
      try {
        a(await window.arweaveWallet[t](...e));
      } catch (l) {
        r(l);
      }
    })
  );
}
class v extends i {
  constructor() {
    super();
    n(this, "id", "arconnect");
    n(this, "name", "ArConnect");
    n(this, "description", "Non-custodial Arweave wallet for your favorite browser");
    n(this, "theme", "171, 154, 255");
    n(this, "logo", "tQUcL4wlNj_NED2VjUGUhfCTJ6pDN9P0e3CbnHo3vUE");
    n(this, "url", "https://arconnect.io");
  }
  async isAvailable() {
    return !await super.isAvailable() || !window.arweaveWallet ? !1 : window.arweaveWallet.walletName === "ArConnect";
  }
  async addToken(a) {
    return await c("addToken", [a]);
  }
}
export {
  v as default
};
